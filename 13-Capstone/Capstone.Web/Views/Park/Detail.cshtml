@using Microsoft.AspNetCore.Http;
@model Capstone.Web.Models.ParkDetailViewModel

@{
    ViewData["Title"] = "Detail";
}

<style>
    #flexContainer {
        display: flex;
        flex-direction: column;
    }

    #parkImage {
        width: 100%;
    }

    #parkName {
        align-self: center;
    }

    #state {
        align-self: center;
    }

    #quote {
        align-self: center;
    }

    #quoteSource {
        align-self: center;
    }

    #description {
        text-align: center;
    }

    #table {
        align-self: center;
    }

    #weatherFlexContainer {
        display: flex;
        flex-direction: row;
    }

    .futureWeatherImages {
        width: 150px;
    }

    .futureWeatherCells {
        align-self: center;
        padding: 15px;
    }

    #weatherFlexContainer div:nth-child(2) {
        margin-left: auto;
    }

    #todaysDate {
        text-align: center;
    }

    td {
        border: solid 3px black;
        padding: 10px;
        text-align: center;
    }
</style>

<div id="flexContainer">

    <div><img id="parkImage" src="~/images/@(Model.SelectedPark.ParkCode).jpg" /></div>
    <div id="parkName"><h1>@Model.SelectedPark.ParkName</h1></div>
    <div id="quote"><p><i>"@Model.SelectedPark.InspirationalQuote"</i></p></div>
    <div id="quoteSource"><p>-@Model.SelectedPark.InspirationalQuoteSource</p></div>
    <div id="state"><h3>Established in @Model.SelectedPark.YearFounded, in the beautiful state of @Model.SelectedPark.State</h3></div>
    <div><p id="description">@Model.SelectedPark.ParkDescription</p></div>

    <div id="table">

        <table>
            <thead>
                <tr>
                    <td>Acreage</td>
                    <td>Elevation</td>
                    <td>Miles of Trail</td>
                    <td>Number of Campsites</td>
                    <td>Climate</td>
                    <td>Annual Visitors</td>
                    <td>Entry Fee</td>
                    <td>Number of Species</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.SelectedPark.Acreage</td>
                    <td>@Model.SelectedPark.ElevationInFeet</td>
                    <td>@Model.SelectedPark.MilesOfTrail</td>
                    <td>@Model.SelectedPark.NumberOfCampsites</td>
                    <td>@Model.SelectedPark.Climate</td>
                    <td>@Model.SelectedPark.AnnualVisitorCount</td>
                    <td>@Model.SelectedPark.EntryFee</td>
                    <td>@Model.SelectedPark.NumberOfAnimalSpecies</td>
                </tr>
            </tbody>
        </table>

    </div>
</div>


@if (Context.Session.GetString("USE_C_KEY") as string == null || Context.Session.GetString("USE_C_KEY") as string == "false")
{
    <a asp-action="DetailTempModify" asp-route-id="@(Model.SelectedPark.ParkCode)">Use Celcius</a>
}
else
{
    <a asp-action="DetailTempModify" asp-route-id="@(Model.SelectedPark.ParkCode)">Use Farenheit</a>
}

@{
    string useC = Context.Session.GetString("USE_C_KEY") as string;
    useC = (string.IsNullOrEmpty(useC) ? string.Empty : useC);
}
<div id="weatherFlexContainer">
    @for (int i = 0; i < Model.ParkWeatherForecast.Count; i++)
    {
        if (i == 0)
        {
            <div class="todaysWeatherCell">
                <h1 id="todaysDate">@System.DateTime.Now.ToShortDateString()</h1>
                <img src="~/images/@(Model.ParkWeatherForecast[i].Forecast).png" />
                @if (useC == "true")
                {
                    <p>High @Model.ParkWeatherForecast[i].ConvertToC(Model.ParkWeatherForecast[i].High)</p>
                    <span>Low @Model.ParkWeatherForecast[i].ConvertToC(Model.ParkWeatherForecast[i].Low)</span>
                }
                else
                {
                    <p>High @Model.ParkWeatherForecast[i].High</p>
                    <span>Low @Model.ParkWeatherForecast[i].Low</span>
                }
                @if (!string.IsNullOrEmpty(Model.ParkWeatherForecast[i].GetForecastMessage()))
                {
                    <p>@Model.ParkWeatherForecast[i].GetForecastMessage()</p>
                }
                @if ((Model.ParkWeatherForecast[i].GetTemperatureMessages()).Count > 0)
                {
                    foreach (string message in Model.ParkWeatherForecast[i].GetTemperatureMessages())
                    {
                        <p>@message</p>
                    }
                }
            </div>
        }

        else
        {
            <div class="futureWeatherCells">
                <img class="futureWeatherImages" src="~/images/@(Model.ParkWeatherForecast[i].Forecast).png" />
                @if (useC == "true")
                {
                    <p>High @Model.ParkWeatherForecast[i].ConvertToC(Model.ParkWeatherForecast[i].High)</p>
                    <span>Low @Model.ParkWeatherForecast[i].ConvertToC(Model.ParkWeatherForecast[i].Low)</span>
                }
                else
                {
                    <p>High @Model.ParkWeatherForecast[i].High</p>
                    <span>Low @Model.ParkWeatherForecast[i].Low</span>
                }
            </div>
        }
    }
</div>

@*
    TODO:
        ADD Weather for park if selected
        ADD Weather C/F selection
        Look into using javascript for dynamic selection
*@